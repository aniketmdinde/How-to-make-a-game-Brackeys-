#GameManager Script
using UnityEngine;
using UnityEngine.SceneManagement;//used when we want to change to a different scene or whenever we want to reload the current scene

public class GameManager : MonoBehaviour
{
   public float restartDelay=1f;//Time Delay after game over for restarting (variable)
     bool gameHasEnded = false;//Variable whose value is changed to false so it is doesnt called multiple times in update function
   public void EndGame()
   {
        if (gameHasEnded == false)
        {
            gameHasEnded = true;
            Debug.Log("GAME OVER");
            Invoke("Restart", restartDelay);
        }
       
    }
    void Restart()
    {
        SceneManager.LoadScene(SceneManager.GetActiveScene().name);// SceneManager.LoadScene() allows to load a scene
                                                                   // SceneManager.GetActiveScene().name allows to reference to the level of the game
    }
}

#ColideObstacle Script
using UnityEngine;

public class CollideObstacle : MonoBehaviour
{
    public PlayerMov movement;
    void OnCollisionEnter(Collision collisionInfo)
   {
        Debug.Log(collisionInfo.collider.tag);// this gives info of the tag name of what has been hit

        if (collisionInfo.collider.tag == "Obstacle")//If the object that has been collided is Obstacle then......
        {
            movement.enabled = false;// stop the movement of the player
            FindObjectOfType<GameManager>().EndGame();// FindObjectOfType<GameManager>() allows to find a object of a type GameManager
        }

    }
}

#CamFollow Script
using UnityEngine;

public class CamFollow : MonoBehaviour
{
    public Transform playpos;//This refers to the transform of the Player in Hierarcy and playpos is a variable which stores the transform component of player
    public Vector3 offset;//Vector3 is a function which needs 3 values ie on x, y and z which is stored in varaible offset
    void Update()
    {
        transform.position = playpos.position + offset;//Here transform.position is the position of the camera
                                                       //playpos.position is the position of player 
       if (playpos.position.y < -1f)
        {
            FindObjectOfType<GameManager>().EndGame();
        }                                            //offset is the Vector3 variable which makes the camera follow the position of the player by keeping some distance
    }
}
//Vector addition is performed in order to calculate positions
//offset value can be changed in the inspector of Camera

